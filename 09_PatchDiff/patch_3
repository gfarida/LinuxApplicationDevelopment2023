--- maze.c	2023-12-20 15:17:20.126530092 +0300
+++ maze_patch_3.c	2023-12-20 15:31:47.840590482 +0300
@@ -33,13 +33,13 @@
     }
 }
 
-void print_maze(int **maze, int maze_size) {
+void print_maze(int **maze, int maze_size, char room_symbl, char wall_symbl) {
     for (int i = 0; i < maze_size; i++) {
         for (int j = 0; j < maze_size; j++) {
             if (maze[i][j] == WALL) {
-                printf("#");
+                printf("%c", wall_symbl);
             } else {
-                printf(".");
+                printf("%c", room_symbl);
             } 
         }
         printf("\n");
@@ -137,7 +137,15 @@
 
 
 int main(int argc, char **argv) {
-    int maze_size = 13;
+    if (argc < 4) {
+        printf("Usage: ./maze_patch_3 random_seed .#(or other symbols) maze_size\n");
+        return 0;
+    }
+    int random_seed = atoi(argv[1]);
+    srand(random_seed);
+
+    int maze_size = atoi(argv[3]) * 2 + 1;
+    char room_syml = argv[2][0], wall_syml = argv[2][1];
 
     int **maze = (int **)malloc(maze_size * sizeof(int *));
 
@@ -170,7 +178,7 @@
         }
     } while (unvisited_count(maze, maze_size) > 0);
 
-    print_maze(maze, maze_size);
+    print_maze(maze, maze_size, room_syml, wall_syml);
     free_maze(maze, maze_size);
     return 0;
 }
\ No newline at end of file
